<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="employeemanageDataSet1" targetNamespace="http://tempuri.org/employeemanageDataSet1.xsd" xmlns:mstns="http://tempuri.org/employeemanageDataSet1.xsd" xmlns="http://tempuri.org/employeemanageDataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="employeemanageConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="employeemanageConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Dbsys.Properties.Settings.GlobalReference.Default.employeemanageConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="salaryTableAdapter" GeneratorDataComponentClassName="salaryTableAdapter" Name="salary" UserDataComponentName="salaryTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="employeemanageConnectionString (Settings)" DbObjectName="employeemanage.dbo.salary" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[salary] WHERE (([salaryId] = @Original_salaryId) AND ([salary] = @Original_salary) AND ([userId] = @Original_userId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_salaryId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="salaryId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_salary" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="salary" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_userId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[salary] ([salary], [userId]) VALUES (@salary, @userId);
SELECT salaryId, salary, userId FROM salary WHERE (salaryId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@salary" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="salary" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@userId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT salaryId, salary, userId FROM dbo.salary</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[salary] SET [salary] = @salary, [userId] = @userId WHERE (([salaryId] = @Original_salaryId) AND ([salary] = @Original_salary) AND ([userId] = @Original_userId));
SELECT salaryId, salary, userId FROM salary WHERE (salaryId = @salaryId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@salary" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="salary" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@userId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_salaryId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="salaryId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_salary" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="salary" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_userId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="userId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="salaryId" ColumnName="salaryId" DataSourceName="employeemanage.dbo.salary" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@salaryId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="salaryId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="salaryId" DataSetColumn="salaryId" />
              <Mapping SourceColumn="salary" DataSetColumn="salary" />
              <Mapping SourceColumn="userId" DataSetColumn="userId" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="employeemanageDataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="employeemanageDataSet1" msprop:Generator_DataSetName="employeemanageDataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="salary" msprop:Generator_RowEvHandlerName="salaryRowChangeEventHandler" msprop:Generator_RowDeletedName="salaryRowDeleted" msprop:Generator_RowDeletingName="salaryRowDeleting" msprop:Generator_RowEvArgName="salaryRowChangeEvent" msprop:Generator_TablePropName="salary" msprop:Generator_RowChangedName="salaryRowChanged" msprop:Generator_RowChangingName="salaryRowChanging" msprop:Generator_TableClassName="salaryDataTable" msprop:Generator_RowClassName="salaryRow" msprop:Generator_TableVarName="tablesalary" msprop:Generator_UserTableName="salary">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="salaryId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="salaryId" msprop:Generator_ColumnPropNameInTable="salaryIdColumn" msprop:Generator_ColumnVarNameInTable="columnsalaryId" msprop:Generator_UserColumnName="salaryId" type="xs:int" />
              <xs:element name="salary" msprop:Generator_ColumnPropNameInRow="salary" msprop:Generator_ColumnPropNameInTable="salaryColumn" msprop:Generator_ColumnVarNameInTable="columnsalary" msprop:Generator_UserColumnName="salary" type="xs:int" />
              <xs:element name="userId" msprop:Generator_ColumnPropNameInRow="userId" msprop:Generator_ColumnPropNameInTable="userIdColumn" msprop:Generator_ColumnVarNameInTable="columnuserId" msprop:Generator_UserColumnName="userId" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:salary" />
      <xs:field xpath="mstns:salaryId" />
    </xs:unique>
  </xs:element>
</xs:schema>